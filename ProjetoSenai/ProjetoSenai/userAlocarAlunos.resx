<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAtualizar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3SAAAN0gFvkv6OAAAAB3RJ
        TUUH4wUOBQMHx7k/RAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOxSURBVFhH
        zZdbiE1RGIAPM8YtDS+KMUK5RI2HY87ee845+5wH1yhF88IMniQMXnhQXkhJkbvCg1cPeJhCIYrItTyg
        XAqj5JrcDWP5/n3+M+2z9zGzzzETf32dfdb6L2uv9a+1/xWLIiab7Wtcu8a4VjO/R+AmvIJ2+AQP6bvM
        716TtuebTHK4aWzso+bli5kzp8K4Tj2OD8AzDfYNfsIvMPrbAT9A+j5i8wT2mawTFx/qzhOTtatMxp6K
        3iF0lmlzWEzGmYzSNrgHH0CCSMAoiK7Y3IdtJuVM8nym6geYtJWh7Zb2t3nB/GJisT50ZOEYvAZ522JB
        oiC24uMkLCD4DH6vgCyd9Hdo2Jx4wTP2IjrOwntV6gnkbe/CbZBl6uzT0DmhYSach895BR+y1u9A+neY
        tLPGZKwmkq6J/ythO5yGN5DPj6B9qF1Dd675CZDRFiiBOG2F1eDCOJNMVpuZdZUmHq80bmIIbWMYVJLE
        WsGzTLlMfdBPiFxwL9u9hAsayYgfwU7eNsVWG+IZdCEmlRqEfgPsgafg9xciZ5T1tppkezDhJPhm3my8
        pxhRGMRAZmIttg98vooSYwrlkDkIwamXad9ZcnA3MQibediegS/q648w2sQoHuSQ8e9zmfpWmXb1G0mM
        ZZEP9mwS8xy/X9VXl8TYm0t4kBPO3yHZTsJ1v+Z+MUl7GHaSgJGCQ7tsPTnbC/YmyFZz1W9kwWYkyAHW
        Bi+64Tlcxci6wUMw+XbAOPVbkrD+cWyXw4YuWA+cIw11MmrZesEDooXcqFafvSsEy5/LPpxmPsH9VKV3
        5X8YwD9fAqlugknIAWSVlYQlC8F6bBuWJVrn9chBVJYQiGLT+2qFj2LXSata2WIcpwIq9W9YtOLdD8U/
        Rhl7gqqWLNhPhDXQYtKJ0docFuM2TEPpT5/jLeUMguWbgO1W9SGf5U201Wp3oUQqSFiOKDnB53gwulL5
        7oLHkPfD3cHeSFk+QlULhTNcSrLjEK0kyzq5ksyyqkyyfihBx9Iu1fQqOAWSyH4fMog7zOZcDRkW6sLo
        Ran3MfGK0iWcGeu07SKIjugG7aU4uQCzNFxYvLLctReDBCk2E+Ui2/wSLJWk13DFRQchMyHLITkRTMxS
        kK39FlgSZ2G3wf2iOfE3VzN5a0nC3SxRnbotTQKXUzms8pdTuYj611me85dT0ZEa8ygZnzXT4/3VXfni
        HVYZp4YM5hbkHMb5dXgJ30GCylX9Ggl5xKsxk9NqzZQpEaY7FvsNOgsEfWbw/V4AAAAASUVORK5CYII=
</value>
  </data>
</root>