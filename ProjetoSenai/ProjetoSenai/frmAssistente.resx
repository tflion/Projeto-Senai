<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVisualizarAlunos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        4wAAAOMBD+bfpwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAS+SURBVFhHxVbv
        T1NXGGY/Y1yyD9t/sA/Lsi/Lsuz7VhAokTgTmMsy5+L2aVnUbcliFo0EEswipS2iUukAFUVQkR8KsjgE
        dOpsAAV08lOLiAIFaXtv7+1t73n2nja33gvH8a378CT3PD19n+e873t+ZAD4XyEk0wkhmU4IyXRCSKYT
        QjKdEJJr4ZMirMssw8dZDnyY5cQ7mZV4m7hXRXPXgpBcCXsF3rSVI39TJSoKqjC2wYn4pkOQNx+GSt8x
        mwPgyHGxpVy3XvmpAx+I4oggJA0UFuH1onasz3FB+soL2XkZrHMojvHHKuYXZUw9ljE4IbE7E2FcvSvD
        e0XB9yfiLIdM5bkxk1WO3TxbotgGhKSBXadxfD6E0WeyjsVlBY+ehOAbk/DrWQ1bPDpIIIEv6HvPOQ0D
        4xKmZ0O4+Y+E3y5E8XmVrthdzJ9dhvdE8TlWEbyWG1zwlnZgkMZYDqmYIeFpgveKijw3Q+kFDcMTCgYm
        JVy/L6PqsoofG2LIq2Co7U0a5UZ6h2X8RDyVSaMybjfrGLAM8j1Yn+tG9ze1kBbCDAtLkUQwjmoSL6xi
        6LwdwdBDCfcfRNDar2DEL4FJEroGI3B2RrH5EMOxvqQJjkHKSllHFJSJmN2ln17ZrBZxcnltRwMiksrw
        NCClgtwalWCnlXeQeO89meqs81WhuE0DZClhguP83xE4uBjN7Sdh4/93H4RRQwsoOKxruS50mk1YxHc2
        Qo5EreIcu8/EUEJifOVc/BcaXx+VwUjcbMA3LqOeVr/jZAz7zmuWGNzEsR4ycYRFzSbWFOegZkKzT8FF
        SjNfORfngmZxY9x8Q8H+tii2evVVcbiJ472JUqZMZNjd6NlF4soLxEf9YWTSHvdNyBieVFDSrgnFDa7N
        F0H1n2pid0w+Cq+Kx03U9igJEzlutGRku3ByWw1CwQgsTWdgbJoMULAg7XuzkFnYzHEDR2lXcANTM9ZY
        HH20M+rIAJXiKR1eXRmFTXiF0tr4Xya+PKrj7K1kx5vFzGODa/wrWYJtv68ugUn8CYl38/InmpCbyHbi
        zItM7G3WsK9FnHqz+PMmjKO41dqEIvHULuBIHEBOnPuaTATCVhP8hOOHDO8Bs7hhwPjm27DsYhQbae6d
        yef15wcSr3vBEZ2nPSVuMZAyUY4T+QcR8T0EngXVVJD6qwrtBoa2AWspDAN/0BnhIPHP6CBqoDLw//jp
        NOwakHlTsvwKNkvN3GkW57AYMEBN9zNdtbqnD7GQpGF2LrmaUxR440GGPVSSG/cUBBZkdI/IcHdFsfNU
        DPn0WxNtQz6XdzvPSH2furTFw5oopsd8ABmwDMyg6zebSuLfWoO5njHEA8Eo5gIyhqbCKG2P4rs6HdQ3
        CXxbF8d+unxu0604TKm/RKuu7VFVd5fmsbv1YlF8A0LSwEcevEZGfqBHR4CuZHVvKxZuToEF6XaUZA2B
        ZVXtHZFwqT/ZfCUtGtteo8/TuyBI29BPQV4qKsLLotgGhORKUOrW8QcJPTS8lMoF/vjgIGMaZUAmLNoc
        jFGN54ivtpXBzt8SolgrISTXQk453qIn2ftkKNN2ADYSfjf7AN4QzV0LQjKdEJLphJBMJ4RkOiEk0wkh
        mT4g41+QNVx/EI7tbwAAAABJRU5ErkJggg==
</value>
  </data>
</root>